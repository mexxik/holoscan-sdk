%YAML 1.2
# SPDX-FileCopyrightText: Copyright (c) 2022-2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# The following extensions are loaded by default so we don't need to specify these.
# Default extension loaded by framework is listed in src/core/executors/gxf/gxf_executor.cpp
# (`kDefaultGXFExtensions` and `kDefaultHoloscanGXFExtensions`)

# extensions:
#   - libgxf_std.so
#   - libgxf_cuda.so
#   - libgxf_multimedia.so
#   - libgxf_serialization.so
#   - libgxf_bayer_demosaic.so
#   - libgxf_stream_playback.so
#   - libgxf_tensor_rt.so

source: "replayer" # or "aja"
do_record: false   # or 'true' if you want to record input video stream.

aja:
  width: 1920
  height: 1080
  rdma: true
  enable_overlay: false
  overlay_rdma: true

replayer:
  directory: "../data/endoscopy/video"
  basename: "surgical_video"
  frame_rate: 0   # as specified in timestamps
  repeat: true    # default: false
  realtime: true  # default: true
  count: 0        # default: 0 (no frame count restriction)

recorder_format_converter:
  in_dtype: "rgba8888"
  out_dtype: "rgb888"

recorder:
  directory: "/tmp"
  basename: "tensor"

format_converter_replayer:
  out_tensor_name: source_video
  out_dtype: "float32"
  scale_min: 0.0
  scale_max: 255.0

format_converter_aja:
  in_dtype: "rgba8888"
  out_tensor_name: source_video
  out_dtype: "float32"
  scale_min: 0.0
  scale_max: 255.0
  resize_width: 854
  resize_height: 480

visualizer_format_converter_replayer:
  in_dtype: "rgb888"
  out_dtype: "rgba8888"
  # out_tensor_name: video

visualizer_format_converter_aja:
  in_dtype: "rgba8888"
  out_dtype: "rgba8888"
  resize_width: 854
  resize_height: 480

holoviz:
  width: 854
  height: 480
  tensors:
    - name: ""
      type: color
      opacity: 1.0
      priority: 0
    - name: mask
      type: color
      opacity: 1.0
      priority: 1
    - name: scaled_coords
      type: crosses
      opacity: 1.0
      line_width: 4
      color: [1.0, 0.0, 0.0, 1.0]
      priority: 2
    - name: scaled_coords
      type: text
      opacity: 1.0
      priority: 3
      color: [1.0, 1.0, 1.0, 0.9]
      text:
        - Grasper
        - Bipolar
        - Hook
        - Scissors
        - Clipper
        - Irrigator
        - Spec.Bag

segmentation_inference:  # TensorRtInference
  model_file_path: ../data/ultrasound/model/us_unet_256x256_nhwc.onnx
  engine_cache_dir: ../data/ultrasound/model/us_unet_256x256_nhwc_engines
  input_tensor_names:
    - source_video
  input_binding_names:
    - INPUT__0
  output_tensor_names:
    - inference_output_tensor
  output_binding_names:
    - OUTPUT__0
  force_engine_update: false
  verbose: true
  max_workspace_size: 2147483648
  enable_fp16_: false

multiai_inference:
  backend: "trt"
  model_path_map:
    "icardio_plax_chamber": "../data/multiai_ultrasound/models/plax_chamber.onnx"
    "icardio_aortic_stenosis": "../data/multiai_ultrasound/models/aortic_stenosis.onnx"
    "icardio_bmode_perspective": "../data/multiai_ultrasound/models/bmode_perspective.onnx"
  pre_processor_map:
    "icardio_plax_chamber": ["plax_cham_pre_proc"]
    "icardio_aortic_stenosis": ["aortic_pre_proc"]
    "icardio_bmode_perspective": ["bmode_pre_proc"]
  inference_map:
    "icardio_plax_chamber": "plax_cham_infer"
    "icardio_aortic_stenosis": "aortic_infer"
    "icardio_bmode_perspective": "bmode_infer"
  in_tensor_names: ["plax_cham_pre_proc", "aortic_pre_proc", "bmode_pre_proc"]
  out_tensor_names: ["plax_cham_infer", "aortic_infer", "bmode_infer"]
  parallel_inference: true
  infer_on_cpu: false
  enable_fp16: false
  input_on_cuda: true
  output_on_cuda: true
  transmit_on_cuda: true
  is_engine_path: false

multiai_postprocessor:
  process_operations:
    "plax_cham_infer": ["max_per_channel_scaled"]
  processed_map:
    "plax_cham_infer": "plax_chamber_processed"
  in_tensor_names: ["plax_cham_infer",
                        "aortic_infer",
                        "bmode_infer"]
  out_tensor_names : ["plax_chamber_processed"]
  input_on_cuda: false
  output_on_cuda: false
  transmit_on_cuda: false

demosaic:
  generate_alpha: false
  bayer_grid_pos: 2
  interpolation_mode: 0 # this is the only interpolation mode supported by NPP currently

video_composer:
